###########################################################################
#                        mjl Typescript Snippets                          #
###########################################################################

# Give these typescript snippets priority over the priority 0 javascript snippets
# that the base typescript snippet file extends.
priority 1

snippet classcmt "Class with comment" b
/* ******************************************************************************
 * $1                                                                       $2*/ /**
 *
 * [Description of the ${1/(?:\w+\.)*(.*)/$1/} class]
 *
 ********************************************************************************/
class ${1:class_name}
{
	/** [Description of myvar1] */
	myvar1: string;

	/** [Description of myvar2] */
	myvar2: number;

	/* **************************************************************************
	 * constructor                                                         */ /**
	 *
	 * $1 class constructor.
	 *
	 */
	constructor({ myvar1 = 'foo',
	              myvar2 = 42 }: I$1_Config = {})
	{
		// instance properties
		this.myvar1 = myvar1;
		this.myvar2 = myvar2;
		$0
	}
}

endsnippet

snippet methodcmt "class method with comment" b
/* **************************************************************************
 * $1                                                                   $5*/ /**
 *
 * [Description of $1]
 *
 * @param $2
 *      [Description of the $2 parameter]
 */
${1:method_name}(${2:param1}: ${3:type}): $4
{
	$0
}
endsnippet

snippet fncmt "function with comment" b
/* ******************************************************************************
 * $1                                                                       $5*/ /**
 *
 * [Description of $1]
 *
 * @param $2
 *      [Description of the $2 parameter]
 */
function ${1:fn_name}(${2:param1}: ${3:type}): $4
{
	$0
}

endsnippet

snippet Icmt "interface with comment" b
/* ******************************************************************************
 * I$1                                                                      $2*/ /**
 *
 * [Description of I$1]
 *
 * @property $3
 *      [Description of $3]
 */
interface I${1:interface_name}
{
	${3:prop_name}: ${4:type};
	$0
}

endsnippet

snippet varcmt "Comment header for a variable" b
/** ${1:Description} */
endsnippet

snippet exportscmt "Module exports with comment header" b
/* **************************************************************************** *
 * Module exports                                                               *
 * **************************************************************************** */
export default $1;
export
{
	$1,
};
endsnippet

# vim:ft=snippets:
